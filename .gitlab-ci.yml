name: Terraform Apply with HCP Vault and GitHub Secrets

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

      # Step 1: Set environment variables from GitHub Secrets and predefined values
  
env:
  HCP_API_ENDPOINT: https://api.cloud.hashicorp.com  # HCP API Endpoint
  TF_ROOT: ${{ github.workspace }}  # GitHub workspace root for Terraform
  HCP_ORGANIZATION_ID: ${{ secrets.HCP_ORGANIZATION_ID }}
  HCP_PROJECT_ID: ${{ secrets.HCP_PROJECT_ID }}
  HCP_APP_NAME: ${{ secrets.HCP_APP_NAME }}
  HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
  HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      # Step 3: # Authenticate with HCP and retrieve secrets
      - name: authenticate with HCP and retrieve secrets
        id: hcp-auth
        run: |
          HCP_API_TOKEN=$(curl --location "https://auth.idp.hashicorp.com/oauth2/token" \
          --header "Content-Type: application/x-www-form-urlencoded" \
          --data-urlencode "client_id=$HCP_CLIENT_ID" \
          --data-urlencode "client_secret=$HCP_CLIENT_SECRET" \
          --data-urlencode "grant_type=client_credentials" \
          --data-urlencode "audience=https://api.hashicorp.cloud" | jq -r .access_token)
    
          SECRETS=$(curl \
          --location "${HCP_API_ENDPOINT}/secrets/2023-06-13/organizations/${HCP_ORGANIZATION_ID}/projects/${HCP_PROJECT_ID}/apps/${HCP_APP_NAME}/open" \
          --request GET \
          --header "Authorization: Bearer $HCP_API_TOKEN")
                
           AWS_ACCESS_KEY_ID=$(echo $SECRETS | jq -r '.secrets[] | select(.name == "AWS_ACCESS_KEY_ID") | .version.value')
           AWS_SECRET_ACCESS_KEY=$(echo $SECRETS | jq -r '.secrets[] | select(.name == "AWS_SECRET_ACCESS_KEY") | .version.value')
    
          echo "aws_access_key_id= $AWS_ACCESS_KEY_ID"  >> $GITHUB_OUTPUT
          echo "aws_secret_access_key= $AWS_SECRET_ACCESS_KEY"  >> $GITHUB_OUTPUT
        
# Step 4: Configure AWS CLI (if needed)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: us-east-1


      # Step 5: Initialize and apply Terraform using the environment variables
      - name: Terraform Init and Apply
        run: terraform init
        working-directory: ${{ env.TF_ROOT }}
      
      - name: Terraform validate
        run: terraform validate
        working-directory: ${{ env.TF_ROOT }}
      
      - name: Terraform Plan
        run: terraform plan
        working-directory: ${{ env.TF_ROOT }}
        
      - name: Terraform apply
        run: terraform apply --auto-approve
        working-directory: ${{ env.TF_ROOT }}
         
          
